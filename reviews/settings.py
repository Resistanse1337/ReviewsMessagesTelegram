"""
Django settings for reviews project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
import environ
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    IS_LOCAL=(bool, True),
    DEBUG=(bool, True)
)
environ.Env.read_env(os.path.join(Path(__file__).parent, ".env"))

IS_LOCAL = env("IS_LOCAL")


def get_env_var_name(var_name): return f"LOCAL_{var_name}" if IS_LOCAL else f"PROD_{var_name}"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env(get_env_var_name("REVIEWS_SECRET_KEY"))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

ALLOWED_HOSTS = env(get_env_var_name("REVIEWS_ALLOWED_HOSTS")).split("|")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    'rest_framework',

    'reviews_app.apps.ReviewsAppConfig',
    'shortify_url_app.apps.ShortifyUrlAppConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'reviews.core.middleware.LogExceptionsMiddleware'
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    "formatters": {
        "reviews_app_formatter": {
            "format": "{levelname} {asctime} {module}: {message}",
            "style": "{"
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(Path(__file__).parent, "logs"),
            'formatter': "reviews_app_formatter",
        }
    },
    'loggers': {
        'reviews_app': {
            'handlers': ['file'],
            'level': "DEBUG",
            'propagate': True
        }
    },
}

ROOT_URLCONF = 'reviews.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reviews.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env(get_env_var_name("REVIEWS_MYSQL_NAME")),
        'USER': env(get_env_var_name("REVIEWS_MYSQL_USER")),
        'PASSWORD': env(get_env_var_name("REVIEWS_MYSQL_PASSWORD")),
        'HOST': env(get_env_var_name("REVIEWS_MYSQL_HOST")),
        'PORT': env(get_env_var_name("REVIEWS_MYSQL_PORT")),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATICFILES_DIRS = [
    #BASE_DIR / "static",
    #'/var/www/static/',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CSRF_TRUSTED_ORIGINS = ["http://62.109.1.122", "https://mbphelperbot.lb-super-dev.ru", "http://127.0.0.1",
                        "https://mbphelperbot.lb-super-dev"]
BOT_TOKEN = env(get_env_var_name("REVIEWS_BOT_TOKEN"))
HOST = env(get_env_var_name("REVIEWS_HOST"))




